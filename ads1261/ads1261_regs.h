#pragma once

#include <regmap/regmap.h>
namespace ads1261 {
	// declare registers
	DECLR_BYTE(ID, 0)
	DECLR_BYTE(STATUS, 1)
	DECLR_BYTE(MODE0, 2)
	DECLR_BYTE(MODE1, 3)
	DECLR_BYTE(MODE2, 4)
	DECLR_BYTE(MODE3, 5)
	DECLR_BYTE(REF, 6)
	DECLR_BYTE(OFCAL0, 7)
	DECLR_BYTE(OFCAL1, 8)
	DECLR_BYTE(OFCAL2, 9)
	DECLR_BYTE(FSCAL0, 0xA)
	DECLR_BYTE(FSCAL1, 0xB)
	DECLR_BYTE(FSCAL2, 0xC)
	DECLR_BYTE(IMUX, 0xD)
	DECLR_BYTE(IMAG, 0xE)
	// DECLR_BYTE(RESERVED, 0xF)
	DECLR_BYTE(PGA, 0x10)
	DECLR_BYTE(INPMUX, 0x11)
	DECLR_BYTE(INPBIAS, 0x12)

	// declare masks
	DECLR_MASK(DEV_ID, ID, 7, 4)
	DECLR_MASK(REV_ID, ID, 3, 0)
	DECLR_MASK(LOCK, STATUS, 7, 7)
	DECLR_MASK(CRCERR, STATUS, 6, 6)
	DECLR_MASK(PGAL_ALM, STATUS, 5, 5)
	DECLR_MASK(PGAH_ALM, STATUS, 4, 4)
	DECLR_MASK(REFL_ALM, STATUS, 3, 3)
	DECLR_MASK(DRDY, STATUS, 2, 2)
	DECLR_MASK(CLOCK, STATUS, 1, 1)
	DECLR_MASK(RESET, STATUS, 0, 0)

	enum DataRate {
		SPS_2_5,
		SPS_5,
		SPS_10,
		SPS_16,
		SPS_20,
		SPS_50,
		SPS_60,
		SPS_100,
		SPS_400,
		SPS_1200,
		SPS_2400,
		SPS_4800,
		SPS_7200,
		SPS_14400,
		SPS_19200,
		SPS_25600,
		SPS_40000,
	};
	DECLR_MASK(DATARATE, MODE0, 7, 3)
	enum Filter {
		SINC1,
		SINC2,
		SINC3,
		SINC4,
		FIR
	};
	DECLR_MASK(FILTER, MODE0, 2, 0)
	enum Chop_ACMode {
		NORMAL,
		CHOP,
		TWO_WIRE_AC_EXC,
		FOUR_WIRE_AC_EXC
	};
	DECLR_MASK(CHOP_AC_EXC, MODE1, 6, 5)
	DECLR_MASK(CONVRT_ONE_SHOT, MODE1, 4, 4)
	DECLR_MASK(CONV_START_DELAY, MODE1, 3, 0)
	DECLR_MASK(CONN_TO_GPIO, MODE2, 7, 4)
	DECLR_MASK(GPIO_DIR_INPUT, MODE2, 3, 0)
	
}